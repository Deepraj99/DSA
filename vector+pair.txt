Array - fast access like a[3], a[5], fixed size;
Linked List - no fixed size, slow access like for a[3] it has to travese from a[0] to a[3], we can change the size in Linked List but not in Array.
Vector - Array + Linked List

//https://www.codechef.com/LRNDSA02/problems/ZCO12002

#include<bits/stdc++.h>
using namespace std;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    vector<pair<int , int>> pr;
    vector<int> v;
    vector<int> w;
    int n, a, b, ans=INT_MAX;
    cin>>n>>a>>b;
    for(int i=0; i<n; i++)
    {
        int x, y;
        cin>>x>>y;
        pr.push_back({x, y});
    }
    for(int i=0; i<a; i++)
    {
        int x;
        cin>>x;
        v.push_back(x);
    }
    for(int i=0; i<b; i++)
    {
        int y;
        cin>>y;
        w.push_back(y);
    }
    sort(v.begin(), v.end());
    sort(w.begin(), w.end());
    for(int i=0; i<n; i++)
    {
        int p = lower_bound(v.begin(), v.end(), pr[i].first) - v.begin();
        int q = lower_bound(w.begin(), w.end(), pr[i].second) - w.begin();
        if(v[p] != pr[i].first) p--;
        if(q != b)
        ans = min(ans, w[q]-v[p]+1);
    }
    cout<<ans<<endl;
}
